#!/usr/bin/env bash
################################################################################
# *** auto-generated by (github.com/FrankyMartz/dotfiles) ***
# FrankyMartz Flavored Bash Shell
#
# Author:   Franky Martinez <frankymartz@gmail.com>
# Version:  0.1.0
################################################################################

stty -ixon -ixoff
set -o vi

# ------------------------------------------------------------------------------
# Foundation
# ------------------------------------------------------------------------------

DOTFILES="${HOME}/.dotfiles"

[[ -x "${DOTFILES}/shell/core.sh" ]] && source "${DOTFILES}/shell/core.sh";
[[ -x "${DOTFILES}/shell/alias.sh" ]] && source "${DOTFILES}/shell/alias.sh";
[[ -x "${DOTFILES}/bin/bash-sensible/sensible.bash" ]] && source "${DOTFILES}/bin/bash-sensible/sensible.bash";

if [[ -x "$(command -v brew)" ]]; then

  # BASH -----------------------------------------------------------------------

  if [[ -x "$(brew --prefix bash)" ]]; then
    SHELL="$(brew --prefix bash)";
    export SHELL;
  fi

  # Bash-Completion ------------------------------------------------------------

  BREW_PREFIX="$(brew --prefix)"
  if [[ -r "${BREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
    source "${BREW_PREFIX}/etc/profile.d/bash_completion.sh";
  fi
fi

# FZF --------------------------------------------------------------------------

if [[ -x "$(command -v fzf)" ]]; then
  eval "$(fzf --bash)"
fi

# DIRENV -----------------------------------------------------------------------

if [[ -x "$(command -v direnv)" ]]; then
  eval "$(direnv hook bash)"
fi

#===============================================================================
# PLUGINS
#===============================================================================

# BASH_POWERLINE ---------------------------------------------------------------

if [[ -f "${DOTFILES}/bin/shell_prompt.sh" ]]; then
  source "${DOTFILES}/bin/shell_prompt.sh";
fi


# Git-Town ---------------------------------------------------------------------

[[ -x "$(command -v git-town)" ]] && source <(git-town completions zsh)

