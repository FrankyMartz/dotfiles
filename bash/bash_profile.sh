#!/usr/bin/env bash
################################################################################
# *** auto-generated by (github.com/FrankyMartz/dotfiles) ***
# FrankyMartz Flavored Bash Shell
#
# Author:   Franky Martinez <frankymartz@gmail.com>
# Version:  0.1.0
################################################################################
stty -ixon -ixoff

#===============================================================================
# PATH Default
#===============================================================================
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/git/bin";

#===============================================================================
# PROMPT LOOK
#===============================================================================
# Base16-Shell -----------------------------------------------------------------
#BASE16_SHELL="$HOME/.dotfiles/bin/base16-shell/base16-eighties.dark.sh"
#[[ -s "$BASE16_SHELL" ]] && . "$BASE16_SHELL"

# BASH_POWERLINE ---------------------------------------------------------------
# shellcheck source=/dev/null
[[ -f "${HOME}/.dotfiles/bin/.shell_prompt.sh" ]] && . "${HOME}/.dotfiles/bin/.shell_prompt.sh";

#===============================================================================
# General
#===============================================================================
export BASH="/usr/local/bin/bash";

if which brew > /dev/null; then
    # BASH ---------------------------------------------------------------------
    if [ -x "$(brew --prefix)/bin/bash" ]; then
        BASH="$(brew --prefix)/bin/bash";
    fi

    # BASH Completion ----------------------------------------------------------
    # shellcheck source=/dev/null
    [[ -f "$(brew --prefix)/etc/bash_completion" ]] && . "$(brew --prefix)/etc/bash_completion";

    # GNU --------------------------------------------------------------------------
    PATH="$(brew --prefix coreutils)/libexec/gnubin:${PATH}";
    export MANPATH;
    MANPATH="$(brew --prefix coreutils)/libexec/gnuman:${MANPATH}";
fi
export SHELL="${BASH}";

# NEOVIM -----------------------------------------------------------------------
#export TERM='xterm-256color'
export NVIM_TUI_ENABLE_TRUE_COLOR=1;
export EDITOR="nvim";

# FZF --------------------------------------------------------------------------
if [ -f "${HOME}/.fzf.bash" ]; then
    # shellcheck source=/dev/null
    . "${HOME}/.fzf.bash";
    export FZF_DEFAULT_COMMAND='ag -g ""';
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}";
fi

# iTerm Integration ------------------------------------------------------------
# shellcheck source=/dev/null
[[ -x "${HOME}/.iterm2_shell_integration.bash" ]] && . "${HOME}/.iterm2_shell_integration.bash";

#===============================================================================
# IRC
#===============================================================================
export IRCNICK="frankymartz";
export IRCNAME="No Konami Code.";
export IRCSERVER="http://chat.freenode.net";


#===============================================================================
# ALIASES
#===============================================================================
alias ll='ls -FAlhG --color --group-directories-first'; # color-mode
alias irc='screen -t 1 irssi';

alias vi='nvim';
alias vim='nvim';

alias pe='path-extractor';
alias PP='git st | pe | fzf -m | xargs git add && clear && printf "\e[3J" && git st';


#===============================================================================
# Bind
#===============================================================================
bind '"CC": "| pe | fzf | pbcopy && clear &&  pbpaste || xargs echo"'


#===============================================================================
# LANGUAGES
#===============================================================================

# Google Cloud SDK -------------------------------------------------------------
# Update PATH for the Google Cloud SDK.
# shellcheck source=/dev/null
[[ -x "${HOME}/google-cloud-sdk/path.bash.inc" ]] && . "${HOME}/google-cloud-sdk/path.bash.inc"
# Enable gcloud Shell Command Completion
# shellcheck source=/dev/null
[[ -x "${HOME}/google-cloud-sdk/completion.bash.inc" ]] && . "${HOME}/google-cloud-sdk/completion.bash.inc"

# PYTHON -----------------------------------------------------------------------
export PYTHONPATH="${HOME}/.dotfiles/bin/python";
# Auto-Complete
if which pyenv > /dev/null; then
    export PYENV_ROOT="/usr/local/var/pyenv";
    export PYTHON_CONFIGURE_OPTS="--enable-shared"
    eval "$(pyenv init -)";
fi
# Setup Python Virtual Environment
if which pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)";
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

# GO-LANG ----------------------------------------------------------------------
export GOROOT="/usr/local/opt/go/libexec";
export GOPATH="${HOME}/go:${HOME}/go_appengine/gopath";
PATH="${PATH}:${GOROOT}/bin:${GOPATH}/bin";
PATH="${PATH}:${HOME}/go_appengine";

# RBENV ------------------------------------------------------------------------
## Use Homebrew's directories rather than ~/.rbenv add to your profile
export RBENV_ROOT="/usr/local/var/rbenv"
export PATH="$RBENV_ROOT/bin:$PATH"

## Enable shims and autocompletion add to your profile
if which rbenv > /dev/null; then
	eval "$(rbenv init -)";
fi

if which ruby >/dev/null && which gem >/dev/null; then
    PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:${PATH}";
fi

# PHP --------------------------------------------------------------------------
#PATH="${PATH}:${HOME}/.composer/vendor/bin"

# Nodeenv ----------------------------------------------------------------------
export NODENV_ROOT="/usr/local/var/nodenv"
if which nodenv > /dev/null; then
    eval "$(nodenv init -)"
fi

#===============================================================================
# PROJECT
#===============================================================================
# NCMS -------------------------------------------------------------------------
export GABO="${HOME}/Projects/Google/gweb-gabo/default";

# Trunk Club--------------------------------------------------------------------
#export DOCKER_HOST="tcp://192.168.23.2:2375";

