--langdef=typescript
--langmap=typescript:.ts
/* --javascript-kinds=-c-a-n-m-f-l-v-p-i-t-e-I */

--_mtable-regex-typescript=/(export)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\2/c,class/
--_mtable-regex-typescript=/(export)?[ \t]*abstract[ \t]+class[ \t]+([a-zA-Z0-9_]+)/\2/a,abstractclass/
--_mtable-regex-typescript=/(declare[ \t]+)?namespace[ \t]+([a-zA-Z0-9_$]+)/\2/n,namespace/
--_mtable-regex-typescript=/(export)?[ \t]*module[ \t]+([a-zA-Z0-9_$]+)/\2/m,module/
--_mtable-regex-typescript=/(export)?[ \t]*(async[ \t]+)?function[ \t]+([a-zA-Z0-9_$:]+)/\3/f,function/
--_mtable-regex-typescript=/(export)?[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_]+)[ \t]*=[ \t]*function/\2/l,lambda/
--_mtable-regex-typescript=/(export)?[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_$:]+)/\3/v,variable/
--_mtable-regex-typescript=/(export)?[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_$]+)[ \t]*=[ \t]*function[ \t]*[*]?/\2/l,varlambda/
--_mtable-regex-typescript=/(public|protected|private)[ \t]+(static[ \t]+)?(abstract[ \t]+)?(((get|set)[ \t]+)?(async[ \t]+[*]*[ \t]*)?([a-zA-Z1-9_$])+)/\4/p,member/
--_mtable-regex-typescript=/(export)?[ \t]*interface[ \t]+([a-zA-Z0-9_$]+)/\2/i,interface/
--_mtable-regex-typescript=/(export)?[ \t]*type[ \t]+([a-zA-Z0-9_$]+)/\2/t,type/
--_mtable-regex-typescript=/(export)?[ \t]*enum[ \t]+([a-zA-Z0-9_$]+)/\2/e,enum/
/* --regex-typescript=/import[ \t]+([a-zA-Z0-9_$]+)/\1/I,import/ */

/* --regex-typescript=/(public|protected|private)[ \t]+(static[ \t]+)?(abstract[ \t]+)?((get|set)[ \t]+)?(async[ \t]+[*]*[ \t]*)?([a-zA-Z1-9_$]+)/\7/p,member/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\2/c,class/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*abstract class[ \t]+([a-zA-Z0-9_]+)/\2/a,abstractclass/ */
/* --regex-typescript=/^[ \t]*(declare[ \t]+)?namespace[ \t]+([a-zA-Z0-9_$]+)/\2/n,namespace/ */
/* --regex-typescript=/^[ \t]*(export[ \t]+)?module[ \t]+([a-zA-Z0-9_$]+)/\2/m,module/ */
/* --regex-typescript=/^[ \t]*(export[ \t]+)?(async[ \t]+)?function[ \t]+([a-zA-Z0-9_$]+)/\3/f,function/ */
/* --regex-typescript=/^[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_]+)[ \t]*=[ \t]*function[ \t]*\(\)/\1/l,lambda/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_$]+)/\3/v,variable/ */
/* --regex-typescript=/^[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_$]+)[ \t]*=[ \t]*function[ \t]*[*]?[ \t]*\(\)/\2/l,varlambda/ */
/* --regex-typescript=/^[ \t]*(public|protected|private)[ \t]+(static[ \t]+)?(abstract[ \t]+)?(((get|set)[ \t]+)|(async[ \t]+[*]*[ \t]*))?([a-zA-Z1-9_$]+)/\4/p,member/ */
/* --regex-typescript=/^[ \t]*(export[ \t]+)?interface[ \t]+([a-zA-Z0-9_$]+)/\2/i,interface/ */
/* --regex-typescript=/^[ \t]*(export[ \t]+)?type[ \t]+([a-zA-Z0-9_$]+)/\2/t,type/ */
/* --regex-typescript=/^[ \t]*(export[ \t]+)?enum[ \t]+([a-zA-Z0-9_$]+)/\2/e,enum/ */
/* --regex-typescript=/^[ \t]*import[ \t]+([a-zA-Z0-9_$]+)/\1/I,import/ */

/* --langdef=typescript */
/* --langmap=typescript:.ts */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\2/c,classes/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*abstract class[ \t]+([a-zA-Z0-9_]+)/\2/a,abstract classes/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*module[ \t]+([a-zA-Z0-9_]+)/\2/n,modules/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\2/t,types/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*namespace[ \t]+([a-zA-Z0-9_]+)/\2/n,modules/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*function[ \t]+([a-zA-Z0-9_]+)/\2/f,functions/ */
/* --regex-typescript=/^[ \t]*export[ \t]+var[ \t]+([a-zA-Z0-9_]+)/\1/v,variables/ */
/* --regex-typescript=/^[ \t]*var[ \t]+([a-zA-Z0-9_]+)[ \t]*=[ \t]*function[ \t]*\(\)/\1/l,varlambdas/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*(public|private)[ \t]+(static)?[ \t]*([a-zA-Z0-9_]+)/\4/m,members/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*interface[ \t]+([a-zA-Z0-9_]+)/\2/i,interfaces/ */
/* --regex-typescript=/^[ \t]*(export)?[ \t]*enum[ \t]+([a-zA-Z0-9_]+)/\2/e,enums/ */

--exclude=min
--exclude=vendor
--exclude=\*.min.\*
--exclude=\*.map
--exclude=\*.swp
--exclude=\*.bak
--exclude=tags
--exclude=node_modules
--exclude=bower_components
--exclude=test
--exclude=tests
